<?php

/**
 * @file
 * Adds Terms of Use to the 'user_register' form.
 *
 * This module adds Terms of Use to the registration page.
 */

/**
 * Implementation of hook_menu().
 */
function terms_of_use_menu() {
//  $items = array();

//  $items['admin/config/people/terms_of_use'] = array(
  $items['admin/config/people/terms_of_use'] = array(
    'description' => 'Add Terms of Use to the registration page.',
    'title' => 'Terms of Use',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('terms_of_use_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'terms_of_use.admin.inc',
  );

  $items['node/autocomplete'] = array(
    'title' => 'Autocomplete node title',
    'page callback' => 'terms_of_use_autocomplete',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
//    'file' => 'terms_of_use.pages.inc',
    'file' => 'terms_of_use.admin.inc',
  );

//  $items['terms_of_use/js'] = array(
//    'page callback' => 'terms_of_use_js',
//    'access arguments' => array('administer site configuration'),
//    'type' => MENU_CALLBACK,
//    'file' => 'terms_of_use.pages.inc',
//  );

  return $items;
}

/**
 * Implementation of hook_form_form_id_alter().
 */
//function terms_of_use_form_user_register_alter(&$form, $form_state) {
function terms_of_use_form_user_register_form_alter(&$form, $form_state) {
  // Administrative users can skip this. So admin/user/user/create won't show
  // the terms of use.
  if (user_access('administer users')) {
    return;
  }

  $fieldset_name = filter_xss(tou_i18nstrings(
    'fieldset_name',
    variable_get('terms_of_use_fieldset_name', t('Terms of Use'))
  ));
  $checkbox_label = filter_xss_admin(tou_i18nstrings(
    'checkbox_label',
    variable_get('terms_of_use_checkbox_label', t('I agree with these terms.'))
  ));

  // Adding the fieldset.
  $form['terms_of_use'] = array(
    '#type' => 'fieldset',
    '#title' => $fieldset_name,
    '#weight' => 10,
  );

  $show_terms = TRUE;

  // Getting the nid of the the Terms of Use node.
  $terms_of_use_node_id = variable_get('terms_of_use_node_id', 0);

  // If the translation module is active the node might be available in other
  // languages.
  if (module_exists('translation')) {
    $translations = translation_node_get_translations($terms_of_use_node_id);
    if (!empty($translations[$GLOBALS['language']->language])) {
      $terms_of_use_node_id = $translations[$GLOBALS['language']->language]->nid;
    }
  }

  // A nid for the desired language was found.
  if ($terms_of_use_node_id) {
    $node = node_load($terms_of_use_node_id);
    // The node could be loaded.
    if ($node->nid) {
      // Show terms on the registration for or just a link?s
      if (strpos($checkbox_label, '@link') !== FALSE) {
        $checkbox_label = str_replace('@link', l($node->title, 'node/' . $node->nid), $checkbox_label);
        $show_terms = FALSE;
      }
      // Adding the nodes body by theme_terms_of_use() to the fieldset if desired.
      if ($show_terms) {
//        $node = node_prepare(node_load($terms_of_use_node_id));
//        $node = node_view($node);

//        if ($node->body) {
        if ($terms = $node->body[$node->language][0]['safe_value']) {
//          drupal_add_css(drupal_get_path('module', 'terms_of_use') . '/terms_of_use.css');
          $form['#attached']['css']= array(
            drupal_get_path('module', 'terms_of_use') . '/terms_of_use.css'
          );
          $form['terms_of_use']['terms_of_use_text'] = array(
//            '#value' => theme('terms_of_use', $content, $node),
            '#markup' => theme('terms_of_use', array('terms' => $terms, 'node' => $node)),
          );
        }
        else {
//          watchdog('Terms of use', 'The body field of the terms of use node was empty. Please check the the nodes content.', array(), WATCHDOG_ALERT, l('Administer terms of use', 'admin/config/people/terms_of_use'));
          watchdog('terms_of_use', 'The body field of the terms of use node was empty. Please check the the nodes content.', array(), WATCHDOG_ALERT, l('Administer terms of use', 'admin/config/people/terms_of_use'));
        }
      }
    }
    else {
//      watchdog('Terms of use', 'The terms of use node could not be loaded. Please check the settings and the node.', array(), WATCHDOG_ALERT, l('Administer terms of use', 'admin/config/people/terms_of_use'));
      watchdog('terms_of_use', 'The terms of use node could not be loaded. Please check the settings and the node.', array(), WATCHDOG_ALERT, l('Administer terms of use', 'admin/config/people/terms_of_use'));
    }
  }
  else {
//    watchdog('Terms of use', 'No node is set to use as terms of use in the currecnt language [' . $GLOBALS['language']->language . '].', array(), WATCHDOG_NOTICE, l('Administer terms of use', 'admin/config/people/terms_of_use'));
    watchdog('terms_of_use', 'No node is set to use as terms of use in the currecnt language [' . $GLOBALS['language']->language . '].', array(), WATCHDOG_NOTICE, l('Administer terms of use', 'admin/config/people/terms_of_use'));
  }

//  // Checkbox validate handles denoting required checkboxes for us
//  if (module_exists('checkbox_validate')) {
//    $asterisk = '';
//  }
//  else {
//    $asterisk = '&nbsp;<span class="form-required" title="' . t('This field is required') . '">*</span>';
//  }

  // Adding the checkbox to the fieldset.
  $form['terms_of_use']['terms_of_use'] = array(
    '#type' => 'checkbox',
//    '#title' => $checkbox_label . $asterisk,
    '#title' => $checkbox_label,
    '#required' => TRUE,
    '#element_validate' => array('_terms_of_use_validate_checkbox'),
  );

  return $form;
}

/**
 * Validation callback; verify that checkbox is checked.
 */
function _terms_of_use_validate_checkbox($form, &$form_state) {
  $value = $form_state['values']['terms_of_use'];
  if ($value == 0) {
    form_set_error('terms_of_use', t('You must agree with the !terms to get an account.', array('!terms' => filter_xss(tou_i18nstrings('fieldset_name', variable_get('terms_of_use_fieldset_name', t('Terms of Use')))))));
  }
}

/**
 * Implementation of hook_theme().
 */
function terms_of_use_theme() {
  return array(
    'terms_of_use' => array(
//      'arguments' => array('terms' => NULL, 'node' => NULL),
      'variables' => array('terms' => NULL, 'node' => NULL),
    ),
  );
}

/**
 * Output the terms of service.
 *
 * @param $terms
 *  The terms of service, already formatted.
 * @param $node
 *  The $node object, in case we need it.
 * @return
 *  HTML output.
 * @ingroup themeable
 */
//function theme_terms_of_use($terms, $node = NULL) {
function theme_terms_of_use($variables) {
  $output  = '<div id="terms-of-use" class="content clear-block">';
  $output .= $variables['terms'];
  $output .= '</div>';

  return $output;
}

/**
 * Implementation of hook_locale().
 */
//function terms_of_use_locale($op = 'groups', $group = NULL) {
function terms_of_use_locale($op = 'groups') {
  switch ($op) {
    case 'groups':
      return array('terms_of_use' => t('Terms of Use'));
    case 'info':
      $info['terms_of_use']['refresh callback'] = 'terms_of_use_locale_refresh';
      $info['terms_of_use']['format'] = FALSE;
      return $info;
  }
}

function terms_of_use_locale_refresh() {
  i18nstrings_update('terms_of_use:tou:fieldset_name', variable_get('terms_of_use_fieldset_name', t('Terms of Use')));
  i18nstrings_update('terms_of_use:tou:checkbox_label', variable_get('terms_of_use_checkbox_label', t('I agree with these terms.')));
  return TRUE;
}

/**
 * Wrapper function for tt() if i18nstrings enabled.
 */
function tou_i18nstrings($name, $string, $langcode = NULL) {
  if (module_exists('i18nstrings')) {
    return i18nstrings('terms_of_use:tou:' . $name, $string, $langcode);
  }
  else {
    return $string;
  }
}